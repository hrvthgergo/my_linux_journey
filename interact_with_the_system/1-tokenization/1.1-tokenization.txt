--------------------
tokenization process
--------------------

as the beginning of the interaction above all we have to provide our intention in any of the forms below:
- we can use a user's terminal, or
- we can invoking bash by reading input from a string supplied as an argument to the -c invocation option of the bash command, or
- we can create an executable text file (.sh extension) containing shell commands.

to process one of the inputs listed above, bash reads its input for unquoted metacharacters and uses them to divide the command line into words, operators and comments(#).
this process is called tokenization. it is possible we meet some of these definitions in the very first time so make them clear:
    - a token is either a word or an operator. tokens are separated by metacharacters.
	- words: a sequence of characters treated as a unit by the shell. words may not include unquoted metacharacters.
	- operators: a control operator or a redirection operator. operators contain at least one unquoted metacharacter.
	- control operators: a token that performs a control function. it is; 
		a newline or one of the following -> ‘||’, ‘&&’, ‘&’, ‘;’, ‘;;’, ‘;&’, ‘;;&’, ‘|’, ‘|&’, ‘(’, or ‘)’.
	- redirection operators: ‘<’, ‘>’, '<<‘, '>>', '2>', '2>>', '<&’, ‘>&’, ‘>|’, '<<-’, '<>'.
	- metacharacters: a character that, when unquoted, separates words; 
		space, tab, newline or one of the following characters: ‘|’, ‘&’, ‘;’, ‘(’, ‘)’, ‘<’, or ‘>’.

-------
aliases
-------

beside tokenization there is one more process that is executed during this phase, it is called alias identification.
aliases, loosely speaking, are nicknames for pipelines.
aliases allow a string to be substituted for a word when it is used as the first word of a simple command.
the shell maintains a list of aliases that may be set and unset with the alias and unalias builtin commands.
aliases can be created and listed with the alias command and removed with the unalias command, or defined within file such as .bash_aliases, .bashrc...
form of aliases:
    	alias alias_name='command | comes | here'
to separate/list aliases use new lines.

------------------
list of references
------------------

https://www.gnu.org/software/bash/manual/bash.html#Invoking-Bash
https://www.gnu.org/software/bash/manual/bash.html#Shell-Scripts
https://www.gnu.org/software/bash/manual/bash.html#Aliases